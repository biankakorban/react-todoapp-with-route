{"version":3,"sources":["components/layout/header.js","components/layout/footer.js","components/body/todoItem.js","components/body/todoList.js","components/body/home.js","components/body/addTodo.js","components/body/editTodo.js","components/body/pageNotFound.js","components/layout/routes.js","components/App.js","serviceWorker.js","index.js"],"names":["styles","header","backgroundColor","padding","justifyContent","link","textDecoration","color","fontWeight","display","Header","react_default","a","createElement","style","react_router_dom","to","footer","margin","Footer","todoItem","position","borderBottom","rowNumber","marginRight","text","complete","TodoItem","props","i","lineNumber","className","todo","title","onClick","deleteTodo","pathname","concat","id","content","editTodo","event","preventDefault","target","value","length","onChange","toggleTodoComplete","type","TodoList","listOfTodos","map","key","Home","body_todoList","filter","toggleTodoToShow","some","removeAllCompleteTodos","toggleTodosAllComplete","AddTodo","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","titleChange","setState","contentChange","state","submitForm","bind","assertThisInitialized","history","push","_this2","onSubmit","name","onClearForm","React","Component","EditTodo","location","defaultValue","noPage","textAlign","PageNotFound","Router","react_router","exact","path","render","home","assign","todoToShow","addTodo","component","App","s","objectSpread","toggleAllComplete","todoList","idGenerator","todoToBeEdited","todos","toConsumableArray","checked","routes","Boolean","window","hostname","match","ReactDOM","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02c11519.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div style={styles.header}>\r\n      <header>\r\n        <nav>\r\n          <Link style={styles.link} to=\"/\">\r\n            Home -\r\n          </Link>\r\n          <Link style={styles.link} to=\"/addTodo\">\r\n            Add Todo\r\n          </Link>\r\n        </nav>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  header: {\r\n    backgroundColor: \"lightblue\",\r\n    padding: \"2px\",\r\n    justifyContent: \"center\"\r\n  },\r\n  link: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n    fontWeight: \"bold\",\r\n    display: \"inline\",\r\n\r\n    padding: \"2px\"\r\n  }\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return <div style={styles.footer}>&copy; Todo App</div>;\r\n};\r\n\r\nconst styles = {\r\n  footer: {\r\n    backgroundColor: \"lightBlue\",\r\n    padding: \"2px\",\r\n    margin: 0\r\n  }\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TodoItem = props => {\r\n  const { i } = props;\r\n  //this.editTodo = this.editTodo.bind(this);\r\n\r\n  const editTodo = event => {\r\n    event.preventDefault();\r\n    let todo = props.todo;\r\n    if (\r\n      event.target[0].value.length !== 0 ||\r\n      event.target[1].value.length !== 0\r\n    ) {\r\n      props.todo.title = event.target[0].value;\r\n      props.todo.content = event.target[1].value;\r\n      props.editTodo(todo);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.todoItem}>\r\n      <span style={styles.rowNumber}>{props.lineNumber}</span>\r\n      <span\r\n        style={styles.text}\r\n        className={!props.todo.complete ? \"\" : \"complete\"}\r\n      >\r\n        {props.todo.title}\r\n      </span>\r\n      <button onClick={props.deleteTodo}>x</button>\r\n\r\n      <Link\r\n        to={{\r\n          pathname: `/editTodo/${props.todo.id}`,\r\n          title: props.todo.title,\r\n          content: props.todo.content,\r\n          editTodo: event => editTodo(event)\r\n        }}\r\n      >\r\n        <button> edit todo</button>\r\n      </Link>\r\n\r\n      <input\r\n        style={styles.complete}\r\n        onChange={event => props.toggleTodoComplete(event, i)}\r\n        type=\"checkbox\"\r\n        complete={props.complete}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  todoItem: {\r\n    position: \"relative\",\r\n    borderBottom: \"2px solid aquamarine\",\r\n    backgroundColor: \"azure\",\r\n    color: \"#222\",\r\n    padding: 10\r\n  },\r\n  rowNumber: {\r\n    color: \"darkcyan\",\r\n    marginRight: 20\r\n  },\r\n  text: {\r\n    fontWeight: \"bold\",\r\n    padding: 10\r\n  },\r\n  complete: {\r\n    padding: 10\r\n  }\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport TodoItem from \"../body/todoItem\";\r\n\r\nconst TodoList = props => {\r\n  // let todoList = props.listOfTodos.map(todo => {\r\n  //   return <TodoItem key={todo.id} todo={todo} />;\r\n  // });\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>{todoList}</div> */}\r\n      <ul>\r\n        {props.listOfTodos.map((todo, i) => {\r\n          return (\r\n            <TodoItem\r\n              key={todo.id}\r\n              todo={todo}\r\n              lineNumber={i + 1}\r\n              toggleTodoComplete={props.toggleTodoComplete}\r\n              deleteTodo={() => props.deleteTodo(todo.id)}\r\n              editTodo={props.editTodo}\r\n              i={i}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport TodoList from \"../body/todoList\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = props => {\r\n  return (\r\n    <div>\r\n      <p>Todo app with route</p>\r\n      <p>List of todos</p>\r\n      <TodoList\r\n        listOfTodos={props.listOfTodos}\r\n        toggleTodoComplete={props.toggleTodoComplete}\r\n        deleteTodo={props.deleteTodo}\r\n        id={props.id}\r\n        editTodo={props.editTodo}\r\n      />\r\n      <p>\r\n        todos left: {props.listOfTodos.filter(todo => !todo.complete).length}\r\n      </p>\r\n      <Link\r\n        to={{\r\n          pathname: \"/addtodo\"\r\n        }}\r\n      >\r\n        <button> add todo</button>\r\n      </Link>\r\n\r\n      <div>\r\n        {/* {props.listOfTodos.map(todo => todo.todoToShow)} */}\r\n        <button onClick={() => props.toggleTodoToShow(\"all\")}>all</button>\r\n        <button onClick={() => props.toggleTodoToShow(\"only complete\")}>\r\n          only complete\r\n        </button>\r\n        <button onClick={() => props.toggleTodoToShow(\"active\")}>active</button>\r\n      </div>\r\n\r\n      {/*show remove all complete todos only if they are any complete todos*/}\r\n      {props.listOfTodos.some(todo => todo.complete) ? (\r\n        <div>\r\n          <button onClick={() => props.removeAllCompleteTodos()}>\r\n            remove complete todos\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n\r\n      <div>\r\n        <button onClick={() => props.toggleTodosAllComplete()}>\r\n          toggle all complete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nclass AddTodo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      content: \"\"\r\n    };\r\n\r\n    this.submitForm = this.submitForm.bind(this);\r\n  }\r\n\r\n  submitForm(event) {\r\n    this.props.submitForm(event);\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  titleChange = event => {\r\n    this.setState({\r\n      title: event.target.value\r\n    });\r\n  };\r\n\r\n  contentChange = event => {\r\n    this.setState({\r\n      content: event.target.value\r\n    });\r\n  };\r\n\r\n  onClearForm(event) {\r\n    event.preventDefault();\r\n    this.setState({\r\n      title: \"\",\r\n      content: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"body\">\r\n        <form onSubmit={this.submitForm}>\r\n          <div>\r\n            <div>\r\n              <label>title of todo</label>\r\n            </div>\r\n            <div>\r\n              <input\r\n                name=\"title\"\r\n                value={this.state.title}\r\n                onChange={event => this.titleChange(event)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <label>content</label>\r\n            </div>\r\n            <div>\r\n              <textarea\r\n                name=\"content\"\r\n                value={this.state.content}\r\n                onChange={event => this.contentChange(event)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add todo</button>\r\n          </div>\r\n          <div>\r\n            <button onClick={event => this.onClearForm(event)}>\r\n              clear form\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\n\r\nclass EditTodo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      content: \"\"\r\n    };\r\n\r\n    this.editTodo = this.editTodo.bind(this);\r\n  }\r\n\r\n  editTodo(event) {\r\n    this.props.location.editTodo(event);\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  titleChange = event => {\r\n    this.setState({\r\n      title: event.target.value\r\n    });\r\n  };\r\n\r\n  contentChange = event => {\r\n    this.setState({\r\n      content: event.target.value\r\n    });\r\n  };\r\n\r\n  onClearForm(event) {\r\n    event.preventDefault();\r\n    this.setState({\r\n      title: \"\",\r\n      content: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.editTodo}>\r\n          <div>\r\n            <div>\r\n              <label>title of todo</label>\r\n            </div>\r\n            <div>\r\n              <input\r\n                name=\"title\"\r\n                defaultValue={this.props.location.title}\r\n                onChange={event => this.titleChange(event)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div>\r\n              <label>content</label>\r\n            </div>\r\n            <div>\r\n              <textarea\r\n                name=\"content\"\r\n                defaultValue={this.props.location.content}\r\n                onChange={event => this.contentChange(event)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">edit todo</button>\r\n          </div>\r\n          <div>\r\n            <button onClick={event => this.onClearForm(event)}>\r\n              clear form\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditTodo;\r\n","import React from \"react\";\r\n\r\nconst PageNotFound = () => {\r\n  return (\r\n    <div style={styles.noPage}>\r\n      <div style={styles.content}>\r\n        <p>404 page not found !!!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  noPage: {\r\n    backgroundColor: \"grey\"\r\n  },\r\n  content: {\r\n    padding: \"50px 100px\",\r\n    textAlign: \"center\",\r\n    fontWeight: \"bold\"\r\n  }\r\n};\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"../body/home\";\r\nimport AddTodo from \"../body/addTodo\";\r\nimport EditTodo from \"../body/editTodo\";\r\nimport PageNotFound from \"../body/pageNotFound\";\r\n\r\nclass Router extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={props => {\r\n              return (\r\n                <Home\r\n                  listOfTodos={this.props.listOfTodos}\r\n                  todoToShow={this.props.todoToShow}\r\n                  id={this.props.id}\r\n                  toggleTodoComplete={this.props.toggleTodoComplete}\r\n                  toggleTodoToShow={this.props.toggleTodoToShow}\r\n                  removeAllCompleteTodos={this.props.removeAllCompleteTodos}\r\n                  toggleTodosAllComplete={this.props.toggleTodosAllComplete}\r\n                  deleteTodo={this.props.deleteTodo}\r\n                  editTodo={this.props.editTodo}\r\n                  {...props}\r\n                />\r\n              );\r\n            }}\r\n          />\r\n          <Route\r\n            path=\"/addTodo\"\r\n            render={props => {\r\n              return <AddTodo submitForm={this.props.submitForm} {...props} />;\r\n            }}\r\n          />\r\n          <Route path=\"/editTodo/:id\" component={EditTodo} />\r\n          <Route component={PageNotFound} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport idGenerator from \"react-id-generator\";\n\nimport Header from \"../components/layout/header\";\nimport Footer from \"../components/layout/footer\";\nimport Routes from \"../components/layout/routes\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      // title: \"\",\n      // content: \"\",\n      complete: false,\n      listOfTodos: [],\n      todoToShow: \"all\",\n      toggleAllComplete: true\n    };\n\n    this.submitForm = this.submitForm.bind(this);\n    this.editTodo = this.editTodo.bind(this);\n  }\n\n  submitForm(event) {\n    event.preventDefault();\n\n    let todoList = this.state.listOfTodos;\n    let id = this.state.id;\n    let complete = this.state.complete;\n    let todoToShow = this.state.todoToShow;\n\n    if (\n      event.target[0].value.length !== 0 ||\n      event.target[1].value.length !== 0\n    ) {\n      todoList.push({\n        title: event.target[0].value,\n        content: event.target[1].value,\n        id: idGenerator(),\n        complete: this.state.complete,\n        todoToShow: this.state.todoToShow\n      });\n\n      this.setState({\n        listOfTodos: todoList,\n        id: id,\n        complete: complete,\n        todoToShow: todoToShow\n      });\n    }\n  }\n\n  editTodo(todoToBeEdited) {\n    let todos = this.state.listOfTodos;\n    todos = todos.map(todo => {\n      if (todo.id === todoToBeEdited.id) {\n        todo.title = todoToBeEdited.title;\n      }\n      return todo;\n    });\n\n    this.setState({\n      listOfTodos: todos\n    });\n  }\n\n  toggleTodoComplete(event, i) {\n    const listOfTodos = [...this.state.listOfTodos]; //copy the array\n    listOfTodos[i] = {\n      ...listOfTodos[i],\n      complete: event.target.checked // update complete property on copied todo\n    }; //copy the todo\n    //console.log(listOfTodos);\n    this.setState({\n      listOfTodos\n    });\n  }\n\n  toggleTodoToShow = s => {\n    this.setState({\n      todoToShow: s\n    });\n  };\n\n  removeAllCompleteTodos = () => {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.filter(todo => !todo.complete)\n    });\n  };\n\n  toggleTodosAllComplete = () => {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.map(todo => ({\n        ...todo,\n        complete: this.state.toggleAllComplete\n      })),\n      toggleAllComplete: !this.state.toggleAllComplete\n    });\n  };\n\n  deleteTodo = id => {\n    this.setState({\n      listOfTodos: this.state.listOfTodos.filter(todo => todo.id !== id)\n    });\n  };\n\n  render() {\n    let todos = [];\n\n    if (this.state.todoToShow === \"all\") {\n      todos = this.state.listOfTodos;\n    } else if (this.state.todoToShow === \"active\") {\n      todos = this.state.listOfTodos.filter(todo => !todo.complete);\n    } else if (this.state.todoToShow === \"only complete\") {\n      todos = this.state.listOfTodos.filter(todo => todo.complete);\n    }\n\n    //console.log(this.state.listOfTodos);\n    return (\n      <div className=\"App\">\n        <Header />\n        <Routes\n          className=\"route\"\n          listOfTodos={todos}\n          title={this.props.title}\n          content={this.props.content}\n          id={this.props.id}\n          submitForm={this.submitForm}\n          editTodo={this.editTodo}\n          toggleTodoComplete={this.toggleTodoComplete.bind(this)}\n          toggleTodoToShow={this.toggleTodoToShow.bind(this)}\n          removeAllCompleteTodos={this.removeAllCompleteTodos.bind(this)}\n          toggleTodosAllComplete={this.toggleTodosAllComplete.bind(this)}\n          deleteTodo={this.deleteTodo.bind(this)}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}